#!/bin/zsh

REPOSITORIES=$HOME/Repositories

# -- vim-like keys binds
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# CTRL-E >> terminal-vim editing
autoload edit-command-line
zle -N edit-command-line
bindkey '^e' edit-command-line

# ([) >> fzf find + vim-open
function ffind-file() {
	file=$(fd . "$REPOSITORIES" --type f --hidden --follow --exclude ".git" | fzf --height 25 --preview 'bat --style=numbers --color=always --line-range :20 {}')

	if [ -n "${file}" ]; then
		nvim "$file" </dev/tty || vim "$file" </dev/tty # tell vim input is from terminal
	fi
	zle accept-line
}
zle -N ffind-file                # define widget (from function)
bindkey -M viins "\[" ffind-file # in vim ins mode
bindkey -M vicmd "\[" ffind-file # in vim cmd mode

# (]) >> fzf dir find + open
function ffind-dir() {
	local dir
	dir=$(fd . "$REPOSITORIES" --type d --hidden --follow --exclude ".git" | fzf +m) && cd "$dir" || return
	zle accept-line
}
zle -N ffind-dir                # define widget (from function)
bindkey -M viins "\]" ffind-dir # in vim ins mode
bindkey -M vicmd "\]" ffind-dir # in vim cmd mode

# (*) >> fzf grep in a directory
function fif() {
	if [ ! "$#" -gt 0 ]; then
		echo "Need a string to search for!"
		return 1
	fi
	rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}
zle -N fif                # define widget (from function)
bindkey -M vicmd "\*" fif # in vim cmd mode

# -- (q) >> exit terminal
function quick-exit() {
	exit
	zle accept-line
}
zle -N quick-exit               # define widget (from function)
bindkey -M vicmd 'q' quick-exit # in vim cmd mode

# -- (`) >> source .zshrc
# todo: update
# date: 2020-08-18 06:21
BACKUP_DIR=$HOME/old
DOTFILES_TARGET_DIR=$HOME/
DOTFILES_SOURCE_DIR=$HOME/Repositories/dotfiles/
DOTFILES=$HOME/Repositories/dotfiles/res/dotfiles.txt

function backup-dotfiles() {
	if ! tr <"$DOTFILES" ' ' _ | xargs -n1 -I {} mv "$DOTFILES_TARGET_DIR"{} "$BACKUP_DIR"; then
		printf "\n-- backing up current dotfiles failed! \n"
	fi
}

function update-dotfiles() {
	if tr <"$DOTFILES" ' ' _ | xargs -n1 -I {} cp -R "$DOTFILES_SOURCE_DIR"{} "$DOTFILES_TARGET_DIR"; then
		printf "-- dotfiles update successful"
	else
		printf "-- dotfiles update failed!"
	fi
}

function quick-source() {
	if [ -d "$BACKUP_DIR" ]; then
		rm -Rf "$BACKUP_DIR"
	fi

	mkdir "$BACKUP_DIR" && backup-dotfiles
	update-dotfiles
	cp init.vim ~/.config/nvim
	source $HOME/.zshrc &>/dev/null </dev/tty
	zle accept-line
}
zle -N quick-source                # define widget (from function)
bindkey -M viins "\`" quick-source # in vim ins mode
bindkey -M vicmd "\`" quick-source # in vim cmd mode
