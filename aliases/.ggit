#!/bin/zsh


# one diff to rule them all!
function smart-diff () {
# if changes have been committed
if git diff-index --quiet HEAD --; then
    git diff HEAD^ HEAD
else
    # if changes been introduced but not staged
    if  git diff --cached --exit-code ; then
        git diff
    else
        # if changes have been introduced & staged (but not committed yet)
        git diff --cached
    fi
fi
}


# -- one pull to rule them all!
function submodule-pull () {
if [[ $(git submodule foreach 'git status') ]]; then
    echo " -- found submodules!"
    echo " -- switching to recursive submodule-pull strategy"
    git submodule update --remote
    git pull --recurse-submodules
else
    git pull
fi
}


# -- safe checking against dirty commits
function submodule-safe-push () {
if [[ $(git submodule foreach 'git status') ]]; then
    echo " -- todo implement safety check to protect submodules!"
else
    git push
fi
}



# -- safe moving in git repositories (because I never seem to remember git mv)
function forget-git-move-not () {
if [ git rev-parse --is-inside-work-tree ]; then
    git mv $1
else
    mv $1
fi;
}


# -- working with forgetful moving in git repositories
alias mv='forget-git-move-not'

# -- viewing repository status
alias ggS='git status'


# -- adding cache
alias ggA='git add .'
alias gga='git add --patch $1'


# -- viewing repository status
alias ggC='git commit -m'


# -- resetting
alias ggrH!='git reset --hard'
alias ggrS!='git reset --soft'


# -- viewing logs
alias ggl='git log'
alias ggrl='git reflog'
# --verifying commits are signed: G=signed | N=not signed
alias ggv='git log --pretty="format:%h %G? %aN  %s"'


# -- submodule-pulling
alias ggpull='submodule-pull'


# -- pushing
alias ggpush='git submodule-safe-push'


# # -- stashing
alias ggst='git stash'


# -- checking what changed/difference
alias ggd='smart-diff'
alias ggdt='git difftool'


# -- re-basing
alias ggR='git rebase'


# -- un-staging files
alias ggcS='git restore --staged'


# -- deleting new changes (not yet staged)
alias ggc='git restore'


# # amend, merge, & edit-conflicts
# alias gca='git commit --amend'
# alias gmerge='git add --name-only --diff-filter=U'
# alias gresolve='vim $(git diff --name-only --diff-filter=U)' # Use :wnext in vim (write changes and move on to next file).

