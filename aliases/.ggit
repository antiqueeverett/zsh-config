#!/bin/zsh


# -- checking relative difference
function smart-diff () {
    # if changes already committed
    if git diff-index --quiet HEAD --; then
        git diff HEAD^ HEAD
    else
        # if changes made (but not staged)
        if  git diff --cached --exit-code ; then
            git diff
        else
            # if changes staged (but not committed)
            git diff --cached
        fi
    fi
}


# -- safe-pulling submodules
function submodule-pull () {
    if [[ $(git submodule foreach 'git status') ]]; then
        echo " -- found submodules!"
        echo " -- switching to recursive submodule-pull strategy"
        git submodule update --remote
        git pull --recurse-submodules
    else
        git pull
    fi
}


# -- safe-pushing with submodules
function submodule-safe-push () {
    if [[ $(git submodule foreach 'git status') ]]; then
        echo " -- todo implement safety check to protect submodules!"
    else
        git push
    fi
}


# -- discarding relative changes
function discard-changes () {
    git restore $1
}


# -- discarding relative changes
alias ggdisc!='discard-changes'


# -- checking out
alias ggco='git checkout'


# -- moving files
alias ggm='git mv'


# -- viewing repository size
alias ggsize='git count-objects -vH'


# -- viewing repository status
alias ggs='git status'


# -- adding cache
alias gga='git add .'
alias gga!='git add --patch $1'


# -- viewing repository status
alias ggc='git commit -m'


# -- resetting
alias ggrH!='git reset --hard'
alias ggrS!='git reset --soft'


# -- viewing logs
alias ggl='git log'
alias ggrl='git reflog'


# --verifying commits are signed: G=signed | N=not signed
alias ggv='git log --pretty="format:%h %G? %aN  %s"'


# -- submodule-pulling
alias ggpull='submodule-pull'


# -- pushing
alias ggpush='submodule-safe-push'


# # -- stashing
alias ggst='git stash'


# -- checking what changed/difference
alias ggd='smart-diff'
alias ggdt='git difftool'


# -- re-basing
alias ggR!='git rebase -i'


# -- un-staging files
alias ggrS='git restore --staged'


# -- deleting new changes (not yet staged)
alias ggr='git restore'


# # amend, merge, & edit-conflicts
# alias gca='git commit --amend'
# alias gmerge='git add --name-only --diff-filter=U'
# alias gresolve='vim $(git diff --name-only --diff-filter=U)' # Use :wnext in vim (write changes and move on to next file).

